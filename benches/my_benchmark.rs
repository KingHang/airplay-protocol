use criterion::{criterion_group, criterion_main, Criterion};
use mdns_exp::airplay::lib::hand_garble::garble;

fn garble1_test() {
    let mut buf0 = [
        150, 95, 198, 83, 248, 70, 204, 24, 223, 190, 178, 248, 56, 215, 236, 34, 3, 209, 32, 143,
    ];
    let mut buf1 = [
        156, 200, 104, 182, 128, 138, 90, 187, 39, 241, 184, 54, 10, 85, 216, 121, 37, 226, 178,
        90, 61, 237, 138, 181, 101, 144, 255, 178, 178, 247, 191, 109, 174, 108, 232, 33, 92, 45,
        232, 98, 95, 13, 152, 231, 3, 33, 20, 26, 92, 154, 133, 221, 87, 75, 249, 142, 68, 95, 134,
        159, 229, 153, 143, 183, 246, 206, 167, 5, 49, 71, 67, 38, 41, 98, 200, 8, 231, 0, 42, 220,
        102, 67, 216, 125, 197, 51, 66, 87, 39, 116, 252, 26, 114, 123, 152, 84, 75, 71, 74, 74,
        161, 12, 10, 214, 53, 253, 51, 134, 161, 236, 121, 70, 37, 42, 189, 31, 230, 115, 190, 15,
        75, 76, 24, 29, 18, 172, 8, 253, 92, 115, 255, 104, 253, 101, 49, 181, 20, 221, 125, 115,
        10, 145, 122, 46, 255, 6, 24, 76, 240, 166, 40, 79, 205, 43, 29, 80, 190, 211, 32, 249, 85,
        254, 107, 107, 96, 169, 32, 161, 52, 175, 65, 88, 129, 42, 101, 110, 198, 29, 94, 191, 104,
        169, 232, 191, 140, 7, 59, 52, 219, 117, 15, 1, 42, 93, 128, 153, 0, 138, 22, 18, 41, 162,
        194, 158, 93, 9, 127, 178, 140, 12,
    ];
    let mut buf2 = [
        67, 84, 98, 122, 24, 195, 214, 179, 154, 86, 246, 28, 20, 63, 12, 29, 59, 54, 131, 177, 57,
        81, 74, 170, 9, 62, 254, 68, 175, 222, 195, 32, 157, 66, 58,
    ];
    let mut buf3 = [0; 132];
    let mut buf4 = [
        237, 37, 209, 187, 188, 39, 159, 2, 162, 169, 17, 0, 12, 179, 82, 192, 189, 227, 27, 73,
        199,
    ];

    garble(&mut buf0, &mut buf1, &mut buf2, &mut buf3, &mut buf4);
    assert_eq!(
        [150, 95, 198, 22, 248, 70, 63, 140, 223, 190, 0, 248, 2, 72, 168, 63, 132, 115, 32, 53],
        buf0
    );

    assert_eq!(
        [
            156, 200, 40, 182, 136, 242, 90, 187, 39, 241, 184, 54, 10, 85, 216, 55, 37, 226, 178,
            119, 61, 237, 87, 201, 101, 144, 255, 178, 178, 247, 191, 109, 174, 202, 232, 33, 217,
            45, 232, 98, 95, 13, 152, 231, 3, 33, 20, 186, 92, 154, 133, 221, 87, 214, 249, 142,
            68, 95, 134, 159, 229, 153, 143, 183, 246, 206, 167, 5, 49, 71, 67, 38, 41, 98, 200, 8,
            231, 0, 42, 220, 102, 67, 216, 125, 197, 51, 66, 87, 39, 116, 252, 26, 114, 123, 152,
            82, 75, 71, 74, 74, 161, 12, 10, 214, 53, 253, 142, 134, 161, 236, 121, 70, 37, 42,
            189, 31, 230, 115, 190, 15, 75, 76, 24, 192, 165, 172, 8, 253, 92, 115, 255, 104, 253,
            101, 49, 181, 20, 221, 125, 115, 33, 145, 122, 28, 255, 6, 24, 76, 240, 166, 40, 79,
            205, 172, 29, 80, 190, 211, 32, 249, 85, 254, 107, 107, 199, 169, 32, 161, 52, 175, 65,
            88, 129, 42, 101, 110, 198, 29, 94, 191, 104, 169, 232, 191, 140, 7, 59, 52, 219, 117,
            56, 1, 42, 93, 128, 153, 0, 138, 204, 18, 41, 162, 194, 158, 93, 9, 127, 178, 140, 12
        ],
        buf1
    );
    assert_eq!(
        [
            67, 44, 162, 122, 88, 26, 214, 179, 207, 86, 246, 28, 1, 220, 185, 29, 105, 54, 195,
            177, 57, 81, 194, 170, 9, 174, 254, 68, 119, 162, 117, 32, 157, 181, 184
        ],
        buf2
    );
    assert_eq!(
        [
            164, 0, 0, 0, 217, 0, 0, 0, 76, 0, 0, 0, 202, 0, 0, 0, 146, 0, 0, 0, 56, 0, 0, 0, 79,
            0, 0, 0, 167, 0, 0, 0, 229, 0, 0, 0, 180, 0, 0, 0, 34, 0, 0, 0, 51, 0, 0, 0, 19, 0, 0,
            0, 27, 0, 0, 0, 199, 0, 0, 0, 0, 0, 0, 0, 204, 0, 0, 0, 222, 0, 0, 0, 10, 0, 0, 0, 164,
            0, 0, 0, 8, 0, 0, 0, 212, 0, 0, 0, 68, 0, 0, 0, 160, 0, 0, 0, 46, 0, 0, 0, 27, 0, 0, 0,
            119, 0, 0, 0, 0, 0, 0, 0, 51, 0, 0, 0, 0, 0, 0, 0, 36, 0, 0, 0, 135, 0, 0, 0, 204, 0,
            0, 0
        ],
        buf3
    );
    assert_eq!(
        [
            237, 37, 209, 187, 188, 39, 159, 2, 162, 169, 17, 0, 12, 179, 82, 192, 189, 227, 27,
            73, 199
        ],
        buf4
    );
}

fn garble2_test() {
    let mut buf0 = [
        150, 95, 198, 83, 248, 70, 204, 24, 223, 190, 178, 248, 56, 215, 236, 34, 3, 209, 32, 143,
    ];
    let mut buf1 = [
        112, 88, 7, 189, 224, 156, 60, 123, 121, 75, 1, 97, 27, 243, 100, 229, 175, 8, 16, 38, 213,
        28, 64, 77, 21, 210, 234, 186, 255, 217, 184, 13, 155, 169, 53, 235, 199, 180, 147, 117,
        126, 185, 167, 183, 120, 10, 189, 105, 147, 229, 164, 190, 106, 76, 89, 111, 26, 66, 5,
        152, 210, 137, 157, 202, 199, 246, 80, 162, 174, 49, 50, 159, 0, 68, 222, 98, 153, 191,
        216, 95, 62, 105, 27, 100, 194, 5, 126, 172, 114, 159, 160, 104, 74, 16, 192, 110, 122,
        247, 63, 7, 207, 34, 14, 141, 30, 77, 162, 236, 85, 56, 118, 125, 181, 176, 121, 166, 42,
        198, 105, 97, 233, 203, 232, 175, 115, 94, 54, 91, 61, 126, 129, 164, 30, 120, 117, 165,
        234, 158, 206, 70, 157, 77, 178, 173, 4, 3, 123, 150, 101, 65, 176, 127, 159, 48, 213, 29,
        168, 25, 201, 70, 76, 70, 252, 175, 194, 193, 137, 6, 188, 99, 241, 45, 189, 12, 111, 111,
        148, 3, 209, 217, 137, 53, 107, 173, 83, 247, 10, 49, 213, 112, 248, 242, 8, 108, 36, 111,
        87, 180, 64, 93, 198, 250, 165, 17, 31, 245, 12, 17, 108, 55,
    ];
    let mut buf2 = [
        67, 84, 98, 122, 24, 195, 214, 179, 154, 86, 246, 28, 20, 63, 12, 29, 59, 54, 131, 177, 57,
        81, 74, 170, 9, 62, 254, 68, 175, 222, 195, 32, 157, 66, 58,
    ];
    let mut buf3 = [0; 132];
    let mut buf4 = [
        237, 37, 209, 187, 188, 39, 159, 2, 162, 169, 17, 0, 12, 179, 82, 192, 189, 227, 27, 73,
        199,
    ];

    garble(&mut buf0, &mut buf1, &mut buf2, &mut buf3, &mut buf4);

    assert_eq!(
        [
            150, 95, 198, 86, 248, 70, 115, 135, 223, 190, 13, 248, 66, 27, 93, 235, 128, 115, 32,
            203
        ],
        buf0
    );
    assert_eq!(
        [
            112, 88, 199, 189, 2, 81, 60, 123, 121, 75, 1, 97, 27, 243, 100, 113, 175, 8, 16, 75,
            213, 28, 93, 33, 21, 210, 234, 186, 255, 217, 184, 13, 155, 153, 90, 235, 68, 180, 147,
            117, 126, 185, 167, 183, 120, 10, 189, 140, 147, 229, 164, 190, 106, 211, 89, 111, 26,
            66, 5, 152, 210, 137, 157, 202, 199, 246, 80, 162, 174, 49, 50, 159, 0, 68, 222, 98,
            153, 191, 216, 95, 62, 105, 27, 100, 194, 5, 126, 172, 114, 159, 160, 104, 74, 16, 192,
            192, 122, 247, 63, 7, 207, 34, 14, 141, 30, 77, 95, 236, 85, 56, 118, 125, 181, 176,
            121, 166, 42, 198, 105, 97, 233, 203, 232, 114, 181, 94, 54, 91, 61, 126, 129, 164, 30,
            120, 117, 165, 234, 158, 206, 70, 98, 77, 178, 82, 4, 3, 123, 150, 101, 65, 176, 127,
            159, 208, 213, 29, 168, 25, 201, 70, 76, 70, 252, 175, 201, 193, 137, 6, 188, 99, 241,
            45, 189, 12, 111, 111, 148, 3, 209, 217, 137, 53, 107, 173, 83, 247, 10, 49, 213, 112,
            56, 242, 8, 108, 36, 111, 87, 180, 253, 93, 198, 250, 165, 17, 31, 245, 12, 17, 108,
            55
        ],
        buf1
    );
    assert_eq!(
        [
            67, 92, 106, 122, 47, 195, 214, 179, 9, 86, 246, 28, 36, 210, 213, 29, 36, 54, 54, 177,
            57, 81, 175, 170, 9, 8, 254, 68, 55, 162, 216, 32, 157, 168, 184
        ],
        buf2
    );
    assert_eq!(
        [
            63, 0, 0, 0, 79, 0, 0, 0, 68, 0, 0, 0, 194, 0, 0, 0, 82, 0, 0, 0, 120, 0, 0, 0, 127, 0,
            0, 0, 31, 0, 0, 0, 93, 0, 0, 0, 74, 0, 0, 0, 123, 0, 0, 0, 92, 0, 0, 0, 18, 0, 0, 0,
            27, 0, 0, 0, 199, 0, 0, 0, 0, 0, 0, 0, 69, 0, 0, 0, 184, 0, 0, 0, 8, 0, 0, 0, 11, 0, 0,
            0, 28, 0, 0, 0, 184, 0, 0, 0, 111, 0, 0, 0, 223, 0, 0, 0, 173, 0, 0, 0, 27, 0, 0, 0,
            54, 0, 0, 0, 130, 0, 0, 0, 9, 0, 0, 0, 96, 0, 0, 0, 239, 0, 0, 0, 181, 0, 0, 0, 246, 0,
            0, 0
        ],
        buf3
    );
    assert_eq!(
        [
            237, 37, 209, 187, 188, 39, 159, 2, 162, 169, 17, 0, 12, 179, 82, 192, 189, 227, 27,
            73, 199
        ],
        buf4
    );
}

fn garble3_test() {
    let mut buf0 = [
        150, 95, 198, 83, 248, 70, 204, 24, 223, 190, 178, 248, 56, 215, 236, 34, 3, 209, 32, 143,
    ];
    let mut buf1 = [
        207, 230, 139, 151, 25, 172, 159, 49, 105, 86, 14, 177, 150, 128, 158, 93, 88, 84, 234, 5,
        130, 231, 202, 68, 248, 31, 16, 70, 76, 73, 177, 175, 89, 20, 160, 193, 181, 251, 54, 23,
        96, 44, 152, 190, 36, 255, 154, 144, 79, 223, 243, 105, 149, 208, 48, 202, 17, 211, 63,
        167, 82, 107, 158, 47, 190, 176, 117, 247, 136, 43, 38, 25, 125, 136, 222, 218, 163, 53,
        98, 37, 180, 229, 71, 212, 202, 133, 10, 21, 214, 200, 163, 246, 60, 50, 244, 20, 18, 30,
        119, 116, 217, 155, 204, 8, 37, 93, 72, 55, 52, 61, 220, 252, 237, 248, 4, 81, 34, 235,
        192, 160, 3, 28, 210, 28, 169, 219, 175, 27, 79, 180, 175, 52, 250, 90, 3, 138, 130, 161,
        11, 200, 126, 88, 230, 235, 12, 41, 160, 23, 202, 76, 196, 161, 33, 189, 223, 247, 143,
        191, 222, 231, 9, 141, 137, 153, 47, 60, 107, 208, 181, 160, 13, 24, 27, 50, 43, 244, 218,
        209, 75, 224, 204, 117, 21, 37, 106, 178, 235, 104, 120, 93, 38, 226, 129, 44, 27, 193,
        248, 137, 64, 3, 37, 94, 62, 39, 108, 8, 35, 12, 46, 94,
    ];
    let mut buf2 = [
        67, 84, 98, 122, 24, 195, 214, 179, 154, 86, 246, 28, 20, 63, 12, 29, 59, 54, 131, 177, 57,
        81, 74, 170, 9, 62, 254, 68, 175, 222, 195, 32, 157, 66, 58,
    ];
    let mut buf3 = [0; 132];
    let mut buf4 = [
        237, 37, 209, 187, 188, 39, 159, 2, 162, 169, 17, 0, 12, 179, 82, 192, 189, 227, 27, 73,
        199,
    ];

    garble(&mut buf0, &mut buf1, &mut buf2, &mut buf3, &mut buf4);

    assert_eq!(
        [150, 95, 198, 22, 248, 70, 150, 229, 223, 190, 6, 248, 2, 3, 204, 250, 4, 115, 32, 212],
        buf0
    );
    assert_eq!(
        [
            207, 230, 75, 151, 34, 162, 159, 49, 105, 86, 14, 177, 150, 128, 158, 166, 88, 84, 234,
            9, 130, 231, 78, 238, 248, 31, 16, 70, 76, 73, 177, 175, 89, 98, 193, 193, 50, 251, 54,
            23, 96, 44, 152, 190, 36, 255, 154, 84, 79, 223, 243, 105, 149, 205, 48, 202, 17, 211,
            63, 167, 82, 107, 158, 47, 190, 176, 117, 247, 136, 43, 38, 25, 125, 136, 222, 218,
            163, 53, 98, 37, 180, 229, 71, 212, 202, 133, 10, 21, 214, 200, 163, 246, 60, 50, 244,
            188, 18, 30, 119, 116, 217, 155, 204, 8, 37, 93, 149, 55, 52, 61, 220, 252, 237, 248,
            4, 81, 34, 235, 192, 160, 3, 28, 210, 193, 181, 219, 175, 27, 79, 180, 175, 52, 250,
            90, 3, 138, 130, 161, 11, 200, 67, 88, 230, 152, 12, 41, 160, 23, 202, 76, 196, 161,
            33, 61, 223, 247, 143, 191, 222, 231, 9, 141, 137, 153, 7, 60, 107, 208, 181, 160, 13,
            24, 27, 50, 43, 244, 218, 209, 75, 224, 204, 117, 21, 37, 106, 178, 235, 104, 120, 93,
            56, 226, 129, 44, 27, 193, 248, 137, 215, 3, 37, 94, 62, 39, 108, 8, 35, 12, 46, 94
        ],
        buf1
    );
    assert_eq!(
        [
            67, 172, 128, 122, 12, 168, 214, 179, 26, 86, 246, 28, 28, 132, 62, 29, 234, 54, 133,
            177, 57, 81, 129, 170, 9, 108, 254, 68, 55, 162, 157, 32, 157, 74, 184
        ],
        buf2
    );
    assert_eq!(
        [
            171, 0, 0, 0, 72, 0, 0, 0, 76, 0, 0, 0, 241, 0, 0, 0, 114, 0, 0, 0, 88, 0, 0, 0, 161,
            0, 0, 0, 255, 0, 0, 0, 61, 0, 0, 0, 84, 0, 0, 0, 38, 0, 0, 0, 110, 0, 0, 0, 2, 0, 0, 0,
            27, 0, 0, 0, 199, 0, 0, 0, 0, 0, 0, 0, 234, 0, 0, 0, 25, 0, 0, 0, 93, 0, 0, 0, 254, 0,
            0, 0, 84, 0, 0, 0, 9, 0, 0, 0, 49, 0, 0, 0, 255, 0, 0, 0, 235, 0, 0, 0, 27, 0, 0, 0,
            181, 0, 0, 0, 132, 0, 0, 0, 48, 0, 0, 0, 2, 0, 0, 0, 202, 0, 0, 0, 104, 0, 0, 0, 207,
            0, 0, 0
        ],
        buf3
    );
    assert_eq!(
        [
            237, 37, 209, 187, 188, 39, 159, 2, 162, 169, 17, 0, 12, 179, 82, 192, 189, 227, 27,
            73, 199
        ],
        buf4
    );
}

fn garble4_test() {
    let mut buf0 = [
        150, 95, 198, 83, 248, 70, 204, 24, 223, 190, 178, 248, 56, 215, 236, 34, 3, 209, 32, 143,
    ];
    let mut buf1 = [
        17, 161, 116, 127, 254, 24, 42, 160, 165, 53, 135, 71, 149, 24, 71, 117, 246, 112, 14, 154,
        42, 248, 85, 95, 232, 26, 14, 70, 251, 113, 12, 198, 182, 150, 143, 88, 191, 13, 244, 39,
        182, 123, 243, 9, 63, 246, 47, 133, 246, 251, 252, 158, 83, 114, 235, 6, 1, 137, 34, 197,
        183, 198, 98, 237, 31, 218, 5, 112, 45, 40, 179, 225, 85, 48, 17, 107, 210, 109, 44, 119,
        81, 42, 23, 228, 109, 187, 15, 212, 144, 143, 250, 145, 70, 208, 4, 255, 51, 227, 17, 127,
        226, 110, 53, 167, 170, 2, 214, 196, 177, 32, 169, 157, 209, 190, 144, 63, 28, 210, 155,
        166, 186, 96, 231, 84, 84, 115, 130, 59, 182, 74, 6, 180, 25, 106, 98, 144, 47, 97, 213,
        218, 141, 197, 170, 143, 206, 163, 2, 182, 6, 28, 239, 233, 251, 198, 185, 199, 244, 149,
        233, 224, 98, 181, 213, 4, 248, 139, 175, 249, 176, 198, 215, 100, 96, 213, 81, 139, 255,
        70, 35, 157, 143, 17, 10, 90, 254, 24, 38, 187, 114, 6, 171, 131, 95, 25, 229, 219, 201,
        89, 186, 19, 7, 131, 12, 196, 152, 123, 187, 232, 138, 162,
    ];
    let mut buf2 = [
        67, 84, 98, 122, 24, 195, 214, 179, 154, 86, 246, 28, 20, 63, 12, 29, 59, 54, 131, 177, 57,
        81, 74, 170, 9, 62, 254, 68, 175, 222, 195, 32, 157, 66, 58,
    ];
    let mut buf3 = [0; 132];
    let mut buf4 = [
        237, 37, 209, 187, 188, 39, 159, 2, 162, 169, 17, 0, 12, 179, 82, 192, 189, 227, 27, 73,
        199,
    ];

    garble(&mut buf0, &mut buf1, &mut buf2, &mut buf3, &mut buf4);

    assert_eq!(
        [150, 95, 198, 87, 248, 70, 204, 166, 223, 190, 10, 248, 1, 19, 58, 210, 0, 115, 32, 251],
        buf0
    );
    assert_eq!(
        [
            17, 161, 52, 127, 226, 252, 42, 160, 165, 53, 135, 71, 149, 24, 71, 23, 246, 112, 14,
            154, 42, 248, 71, 243, 232, 26, 14, 70, 251, 113, 12, 198, 182, 198, 148, 88, 60, 13,
            244, 39, 182, 123, 243, 9, 63, 246, 47, 131, 246, 251, 252, 158, 83, 211, 235, 6, 1,
            137, 34, 197, 183, 198, 98, 237, 31, 218, 5, 112, 45, 40, 179, 225, 85, 48, 17, 107,
            210, 109, 44, 119, 81, 42, 23, 228, 109, 187, 15, 212, 144, 143, 250, 145, 70, 208, 4,
            2, 51, 227, 17, 127, 226, 110, 53, 167, 170, 2, 79, 196, 177, 32, 169, 157, 209, 190,
            144, 63, 28, 210, 155, 166, 186, 96, 231, 137, 229, 115, 130, 59, 182, 74, 6, 180, 25,
            106, 98, 144, 47, 97, 213, 218, 141, 197, 170, 121, 206, 163, 2, 182, 6, 28, 239, 233,
            251, 77, 185, 199, 244, 149, 233, 224, 98, 181, 213, 4, 140, 139, 175, 249, 176, 198,
            215, 100, 96, 213, 81, 139, 255, 70, 35, 157, 143, 17, 10, 90, 254, 24, 38, 187, 114,
            6, 56, 131, 95, 25, 229, 219, 201, 89, 57, 19, 7, 131, 12, 196, 152, 123, 187, 232,
            138, 162
        ],
        buf1
    );
    assert_eq!(
        [
            67, 204, 124, 122, 28, 193, 214, 179, 107, 86, 246, 28, 144, 26, 225, 29, 126, 54, 153,
            177, 57, 81, 111, 170, 9, 224, 254, 68, 147, 162, 123, 32, 157, 68, 184
        ],
        buf2
    );
    assert_eq!(
        [
            169, 0, 0, 0, 165, 0, 0, 0, 8, 0, 0, 0, 146, 0, 0, 0, 174, 0, 0, 0, 28, 0, 0, 0, 233,
            0, 0, 0, 30, 0, 0, 0, 92, 0, 0, 0, 164, 0, 0, 0, 210, 0, 0, 0, 119, 0, 0, 0, 26, 0, 0,
            0, 27, 0, 0, 0, 199, 0, 0, 0, 0, 0, 0, 0, 163, 0, 0, 0, 170, 0, 0, 0, 23, 0, 0, 0, 95,
            0, 0, 0, 244, 0, 0, 0, 162, 0, 0, 0, 147, 0, 0, 0, 157, 0, 0, 0, 143, 0, 0, 0, 27, 0,
            0, 0, 117, 0, 0, 0, 4, 0, 0, 0, 37, 0, 0, 0, 32, 0, 0, 0, 153, 0, 0, 0, 220, 0, 0, 0,
            84, 0, 0, 0
        ],
        buf3
    );
    assert_eq!(
        [
            237, 37, 209, 187, 188, 39, 159, 2, 162, 169, 17, 0, 12, 179, 82, 192, 189, 227, 27,
            73, 199
        ],
        buf4
    );
}

fn garble5_test() {
    let mut buf0 = [
        150, 95, 198, 83, 248, 70, 204, 24, 223, 190, 178, 248, 56, 215, 236, 34, 3, 209, 32, 143,
    ];
    let mut buf1 = [
        38, 22, 138, 252, 34, 158, 186, 24, 144, 126, 50, 254, 250, 121, 231, 119, 89, 243, 204,
        10, 48, 90, 190, 38, 213, 204, 45, 123, 188, 48, 73, 150, 36, 12, 28, 25, 126, 240, 29,
        243, 190, 130, 197, 119, 3, 50, 109, 134, 112, 30, 89, 169, 134, 173, 83, 87, 154, 169, 40,
        235, 151, 98, 1, 141, 72, 56, 11, 95, 132, 125, 150, 80, 176, 108, 163, 250, 26, 3, 132,
        228, 29, 77, 186, 142, 82, 202, 215, 64, 30, 252, 124, 198, 92, 153, 207, 4, 96, 26, 231,
        108, 36, 37, 243, 39, 21, 146, 202, 184, 121, 21, 68, 26, 191, 71, 235, 44, 206, 84, 221,
        120, 117, 63, 249, 135, 84, 35, 252, 242, 245, 59, 61, 207, 120, 16, 193, 144, 119, 157,
        17, 234, 232, 124, 186, 65, 210, 90, 96, 148, 84, 143, 116, 171, 222, 13, 90, 179, 159,
        155, 125, 172, 204, 163, 95, 103, 240, 253, 111, 223, 99, 220, 189, 13, 3, 193, 142, 103,
        81, 145, 152, 211, 59, 41, 191, 229, 158, 80, 204, 225, 113, 64, 62, 71, 70, 98, 130, 22,
        86, 9, 192, 99, 204, 104, 174, 246, 191, 34, 63, 218, 101, 222,
    ];
    let mut buf2 = [
        67, 84, 98, 122, 24, 195, 214, 179, 154, 86, 246, 28, 20, 63, 12, 29, 59, 54, 131, 177, 57,
        81, 74, 170, 9, 62, 254, 68, 175, 222, 195, 32, 157, 66, 58,
    ];
    let mut buf3 = [0; 132];
    let mut buf4 = [
        237, 37, 209, 187, 188, 39, 159, 2, 162, 169, 17, 0, 12, 179, 82, 192, 189, 227, 27, 73,
        199,
    ];

    garble(&mut buf0, &mut buf1, &mut buf2, &mut buf3, &mut buf4);

    assert_eq!(
        [
            150, 95, 198, 80, 248, 70, 150, 133, 223, 190, 13, 248, 147, 11, 50, 116, 132, 115, 32,
            209
        ],
        buf0
    );
    assert_eq!(
        [
            38, 22, 74, 252, 114, 241, 186, 24, 144, 126, 50, 254, 250, 121, 231, 185, 89, 243,
            204, 15, 48, 90, 85, 14, 213, 204, 45, 123, 188, 48, 73, 150, 36, 40, 69, 25, 251, 240,
            29, 243, 190, 130, 197, 119, 3, 50, 109, 57, 112, 30, 89, 169, 134, 214, 83, 87, 154,
            169, 40, 235, 151, 98, 1, 141, 72, 56, 11, 95, 132, 125, 150, 80, 176, 108, 163, 250,
            26, 3, 132, 228, 29, 77, 186, 142, 82, 202, 215, 64, 30, 252, 124, 198, 92, 153, 207,
            82, 96, 26, 231, 108, 36, 37, 243, 39, 21, 146, 119, 184, 121, 21, 68, 26, 191, 71,
            235, 44, 206, 84, 221, 120, 117, 63, 249, 90, 181, 35, 252, 242, 245, 59, 61, 207, 120,
            16, 193, 144, 119, 157, 17, 234, 89, 124, 186, 42, 210, 90, 96, 148, 84, 143, 116, 171,
            222, 237, 90, 179, 159, 155, 125, 172, 204, 163, 95, 103, 248, 253, 111, 223, 99, 220,
            189, 13, 3, 193, 142, 103, 81, 145, 152, 211, 59, 41, 191, 229, 158, 80, 204, 225, 113,
            64, 56, 71, 70, 98, 130, 22, 86, 9, 188, 99, 204, 104, 174, 246, 191, 34, 63, 218, 101,
            222
        ],
        buf1
    );
    assert_eq!(
        [
            67, 9, 166, 122, 34, 33, 214, 179, 1, 86, 246, 28, 231, 157, 9, 29, 85, 54, 17, 177,
            57, 81, 153, 170, 9, 82, 254, 68, 119, 162, 184, 32, 157, 110, 184
        ],
        buf2
    );
    assert_eq!(
        [
            8, 0, 0, 0, 170, 0, 0, 0, 76, 0, 0, 0, 204, 0, 0, 0, 146, 0, 0, 0, 56, 0, 0, 0, 171, 0,
            0, 0, 223, 0, 0, 0, 29, 0, 0, 0, 46, 0, 0, 0, 53, 0, 0, 0, 22, 0, 0, 0, 3, 0, 0, 0, 27,
            0, 0, 0, 199, 0, 0, 0, 0, 0, 0, 0, 77, 0, 0, 0, 179, 0, 0, 0, 0, 0, 0, 0, 103, 0, 0, 0,
            128, 0, 0, 0, 177, 0, 0, 0, 156, 0, 0, 0, 72, 0, 0, 0, 65, 0, 0, 0, 27, 0, 0, 0, 114,
            0, 0, 0, 10, 0, 0, 0, 3, 0, 0, 0, 96, 0, 0, 0, 66, 0, 0, 0, 179, 0, 0, 0, 136, 0, 0, 0
        ],
        buf3
    );
    assert_eq!(
        [
            237, 37, 209, 187, 188, 39, 159, 2, 162, 169, 17, 0, 12, 179, 82, 192, 189, 227, 27,
            73, 199
        ],
        buf4
    );
}

fn garble6_test() {
    let mut buf0 = [
        150, 95, 198, 83, 248, 70, 204, 24, 223, 190, 178, 248, 56, 215, 236, 34, 3, 209, 32, 143,
    ];
    let mut buf1 = [
        34, 126, 12, 15, 143, 98, 247, 151, 124, 241, 169, 97, 160, 44, 109, 181, 228, 143, 161,
        17, 75, 110, 227, 183, 200, 178, 158, 194, 31, 202, 5, 253, 228, 42, 215, 244, 65, 20, 116,
        121, 1, 27, 231, 137, 153, 184, 242, 113, 218, 190, 138, 17, 22, 80, 179, 131, 159, 128,
        202, 201, 87, 190, 168, 177, 184, 237, 192, 65, 152, 114, 129, 14, 191, 28, 150, 165, 103,
        154, 152, 235, 68, 131, 79, 201, 220, 197, 250, 160, 249, 148, 243, 184, 95, 250, 34, 172,
        205, 69, 68, 228, 122, 207, 59, 239, 136, 197, 69, 113, 3, 122, 238, 231, 22, 222, 170,
        100, 69, 39, 113, 141, 214, 174, 189, 153, 57, 22, 165, 170, 82, 174, 170, 216, 145, 32,
        110, 154, 48, 161, 203, 173, 36, 170, 79, 247, 116, 192, 222, 102, 227, 251, 212, 153, 44,
        143, 203, 160, 44, 237, 196, 86, 176, 227, 99, 84, 189, 128, 209, 125, 210, 158, 26, 231,
        254, 82, 238, 214, 62, 150, 13, 73, 242, 25, 215, 63, 178, 69, 222, 140, 20, 140, 193, 199,
        37, 74, 33, 9, 61, 155, 49, 113, 59, 85, 47, 180, 254, 4, 144, 153, 24, 229,
    ];
    let mut buf2 = [
        67, 84, 98, 122, 24, 195, 214, 179, 154, 86, 246, 28, 20, 63, 12, 29, 59, 54, 131, 177, 57,
        81, 74, 170, 9, 62, 254, 68, 175, 222, 195, 32, 157, 66, 58,
    ];
    let mut buf3 = [0; 132];
    let mut buf4 = [
        237, 37, 209, 187, 188, 39, 159, 2, 162, 169, 17, 0, 12, 179, 82, 192, 189, 227, 27, 73,
        199,
    ];

    garble(&mut buf0, &mut buf1, &mut buf2, &mut buf3, &mut buf4);

    assert_eq!(
        [
            150, 95, 198, 186, 248, 70, 95, 107, 223, 190, 12, 248, 65, 31, 93, 115, 0, 115, 32,
            140
        ],
        buf0
    );
    assert_eq!(
        [
            34, 126, 204, 15, 210, 0, 247, 151, 124, 241, 169, 97, 160, 44, 109, 75, 228, 143, 161,
            54, 75, 110, 92, 123, 200, 178, 158, 194, 31, 202, 5, 253, 228, 90, 215, 244, 190, 20,
            116, 121, 1, 27, 231, 137, 153, 184, 242, 141, 218, 190, 138, 17, 22, 211, 179, 131,
            159, 128, 202, 201, 87, 190, 168, 177, 184, 237, 192, 65, 152, 114, 129, 14, 191, 28,
            150, 165, 103, 154, 152, 235, 68, 131, 79, 201, 220, 197, 250, 160, 249, 148, 243, 184,
            95, 250, 34, 82, 205, 69, 68, 228, 122, 207, 59, 239, 136, 197, 248, 113, 3, 122, 238,
            231, 22, 222, 170, 100, 69, 39, 113, 141, 214, 174, 189, 68, 189, 22, 165, 170, 82,
            174, 170, 216, 145, 32, 110, 154, 48, 161, 203, 173, 59, 170, 79, 160, 116, 192, 222,
            102, 227, 251, 212, 153, 44, 198, 203, 160, 44, 237, 196, 86, 176, 227, 99, 84, 245,
            128, 209, 125, 210, 158, 26, 231, 254, 82, 238, 214, 62, 150, 13, 73, 242, 25, 215, 63,
            178, 69, 222, 140, 20, 140, 56, 199, 37, 74, 33, 9, 61, 155, 64, 113, 59, 85, 47, 180,
            254, 4, 144, 153, 24, 229
        ],
        buf1
    );
    assert_eq!(
        [
            67, 60, 100, 122, 23, 195, 214, 179, 164, 86, 246, 28, 47, 61, 188, 29, 237, 54, 198,
            177, 57, 81, 157, 170, 9, 94, 254, 68, 119, 162, 143, 32, 157, 212, 184
        ],
        buf2
    );
    assert_eq!(
        [
            217, 0, 0, 0, 116, 0, 0, 0, 76, 0, 0, 0, 54, 0, 0, 0, 146, 0, 0, 0, 56, 0, 0, 0, 153,
            0, 0, 0, 174, 0, 0, 0, 236, 0, 0, 0, 178, 0, 0, 0, 72, 0, 0, 0, 214, 0, 0, 0, 24, 0, 0,
            0, 27, 0, 0, 0, 199, 0, 0, 0, 0, 0, 0, 0, 12, 0, 0, 0, 219, 0, 0, 0, 196, 0, 0, 0, 30,
            0, 0, 0, 178, 0, 0, 0, 209, 0, 0, 0, 0, 0, 0, 0, 236, 0, 0, 0, 247, 0, 0, 0, 27, 0, 0,
            0, 115, 0, 0, 0, 8, 0, 0, 0, 112, 0, 0, 0, 2, 0, 0, 0, 212, 0, 0, 0, 143, 0, 0, 0, 230,
            0, 0, 0
        ],
        buf3
    );
    assert_eq!(
        [
            237, 37, 209, 187, 188, 39, 159, 2, 162, 169, 17, 0, 12, 179, 82, 192, 189, 227, 27,
            73, 199
        ],
        buf4
    );
}

fn garble7_test() {
    let mut buf0 = [
        150, 95, 198, 83, 248, 70, 204, 24, 223, 190, 178, 248, 56, 215, 236, 34, 3, 209, 32, 143,
    ];
    let mut buf1 = [
        27, 49, 220, 213, 67, 153, 133, 83, 152, 73, 51, 180, 216, 255, 240, 34, 8, 160, 122, 19,
        29, 145, 49, 98, 105, 26, 42, 58, 156, 28, 18, 166, 152, 245, 240, 219, 2, 143, 131, 61,
        209, 183, 60, 55, 201, 45, 74, 70, 96, 184, 167, 219, 185, 57, 118, 79, 74, 220, 215, 143,
        235, 43, 249, 18, 172, 119, 229, 35, 218, 175, 34, 103, 117, 146, 38, 127, 126, 201, 33,
        24, 195, 77, 154, 198, 58, 168, 100, 32, 44, 66, 164, 124, 230, 138, 237, 115, 3, 175, 82,
        25, 58, 53, 57, 185, 107, 116, 180, 165, 156, 15, 220, 178, 146, 22, 222, 208, 37, 172, 37,
        138, 249, 211, 50, 142, 252, 135, 77, 212, 162, 242, 216, 115, 21, 12, 37, 68, 202, 110,
        91, 167, 197, 76, 34, 188, 110, 190, 206, 228, 186, 104, 226, 136, 37, 144, 221, 154, 206,
        237, 213, 98, 65, 28, 248, 34, 107, 76, 130, 4, 101, 108, 54, 151, 79, 73, 159, 67, 65,
        166, 19, 162, 46, 185, 152, 32, 162, 88, 140, 212, 62, 96, 227, 240, 28, 21, 164, 117, 54,
        51, 3, 158, 201, 173, 148, 52, 67, 0, 253, 63, 55, 198,
    ];
    let mut buf2 = [
        67, 84, 98, 122, 24, 195, 214, 179, 154, 86, 246, 28, 20, 63, 12, 29, 59, 54, 131, 177, 57,
        81, 74, 170, 9, 62, 254, 68, 175, 222, 195, 32, 157, 66, 58,
    ];
    let mut buf3 = [0; 132];
    let mut buf4 = [
        237, 37, 209, 187, 188, 39, 159, 2, 162, 169, 17, 0, 12, 179, 82, 192, 189, 227, 27, 73,
        199,
    ];

    garble(&mut buf0, &mut buf1, &mut buf2, &mut buf3, &mut buf4);

    assert_eq!(
        [
            150, 95, 198, 242, 248, 70, 32, 128, 223, 190, 10, 248, 2, 31, 150, 121, 132, 115, 32,
            35
        ],
        buf0
    );
    assert_eq!(
        [
            27, 49, 156, 213, 50, 14, 133, 83, 152, 73, 51, 180, 216, 255, 240, 10, 8, 160, 122,
            56, 29, 145, 77, 12, 105, 26, 42, 58, 156, 28, 18, 166, 152, 37, 25, 219, 127, 143,
            131, 61, 209, 183, 60, 55, 201, 45, 74, 50, 96, 184, 167, 219, 185, 208, 118, 79, 74,
            220, 215, 143, 235, 43, 249, 18, 172, 119, 229, 35, 218, 175, 34, 103, 117, 146, 38,
            127, 126, 201, 33, 24, 195, 77, 154, 198, 58, 168, 100, 32, 44, 66, 164, 124, 230, 138,
            237, 82, 3, 175, 82, 25, 58, 53, 57, 185, 107, 116, 9, 165, 156, 15, 220, 178, 146, 22,
            222, 208, 37, 172, 37, 138, 249, 211, 50, 83, 165, 135, 77, 212, 162, 242, 216, 115,
            21, 12, 37, 68, 202, 110, 91, 167, 243, 76, 34, 73, 110, 190, 206, 228, 186, 104, 226,
            136, 37, 60, 221, 154, 206, 237, 213, 98, 65, 28, 248, 34, 210, 76, 130, 4, 101, 108,
            54, 151, 79, 73, 159, 67, 65, 166, 19, 162, 46, 185, 152, 32, 162, 88, 140, 212, 62,
            96, 56, 240, 28, 21, 164, 117, 54, 51, 216, 158, 201, 173, 148, 52, 67, 0, 253, 63, 55,
            198
        ],
        buf1
    );
    assert_eq!(
        [
            67, 44, 164, 122, 41, 252, 214, 179, 78, 86, 246, 28, 222, 26, 234, 29, 132, 54, 53,
            177, 57, 81, 82, 170, 9, 152, 254, 68, 119, 162, 246, 32, 157, 104, 184
        ],
        buf2
    );
    assert_eq!(
        [
            85, 0, 0, 0, 86, 0, 0, 0, 8, 0, 0, 0, 178, 0, 0, 0, 146, 0, 0, 0, 56, 0, 0, 0, 136, 0,
            0, 0, 30, 0, 0, 0, 92, 0, 0, 0, 50, 0, 0, 0, 116, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 27,
            0, 0, 0, 199, 0, 0, 0, 0, 0, 0, 0, 250, 0, 0, 0, 252, 0, 0, 0, 4, 0, 0, 0, 83, 0, 0, 0,
            82, 0, 0, 0, 244, 0, 0, 0, 26, 0, 0, 0, 157, 0, 0, 0, 188, 0, 0, 0, 27, 0, 0, 0, 5, 0,
            0, 0, 228, 0, 0, 0, 48, 0, 0, 0, 2, 0, 0, 0, 109, 0, 0, 0, 252, 0, 0, 0, 204, 0, 0, 0
        ],
        buf3
    );
    assert_eq!(
        [
            237, 37, 209, 187, 188, 39, 159, 2, 162, 169, 17, 0, 12, 179, 82, 192, 189, 227, 27,
            73, 199
        ],
        buf4
    );
}

fn bench_garble() {
    for _ in 0..99 {
        garble1_test();
        garble2_test();
        garble3_test();
        garble4_test();
        garble5_test();
        garble6_test();
        garble7_test();
    }
}

fn criterion_benchmark(c: &mut Criterion) {
    c.bench_function("fib 20", |b| b.iter(bench_garble));
}

criterion_group!(benches, criterion_benchmark);
criterion_main!(benches);
